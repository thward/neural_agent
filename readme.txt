/neural

Inputs
======
nodes.txt - node layer, node number, node type[(N)ormal, (B)ias, (R)eward], initial activation
connections.txt - connections and weights, if non exists a fully connected one is autogenerated based on nodes.txt
netfile.txt - controls network:
	LEARNING_RATE
	MOMENTUM
	THRESHOLD
	TEMPERATURE
	ITERATIONS
    LOG_LEVEL; 0 (low), 1 (high), 2 (high + weights)
	BLUETOOTH_ENABLED; (y)es or (n)o - applicable to (d)irect, (i)ndirect only
	LEARNING_MODE; (s)upervised, (p)rimary, (c)onditioned/secondary
	REINFORCEMENT_LEARNING;  (b)ackpropagation, (r)RLA


Compatibiity matrix:

BLUETOOTH_ENABLED	LEARNING_MODE    REINFORCEMENT_LEARNING    
n					s                b/r*                    
y/n					p                b/r
y/n					c                b

*This allows direct comparison of RLA against normal supervised backpropagation. RLA should naturally only occur with (p)rimary, (c)onditioned learning modes.

Outputs
=======
connections_out.txt - weights after learning
logfile.txt
